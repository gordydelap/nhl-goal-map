// 1. Create a map object.
var mymap = L.map('map', {
    center: [0, 0],
    zoom: 20,
    maxZoom: 22,
    minZoom: 18,
    detectRetina: true});

// 2. Add a base map.
var mytile = L.tileLayer('assets/tiles/{z}/{x}/{y}.png', {
  maxZoom: 22,
  tms: true,
  attribution: 'Generated by QTiles'
}).addTo(mymap);

// 3. Add airports GeoJSON Data
// Null variable that will hold airport data
var goals = "assets/NHLGoals2018Season.geojson";


// 4. build up a set of colors from colorbrewer's dark2 category
var colors = chroma.scale('Accent').mode('lch').colors(2);

// 5. dynamically append style classes to this page. This style classes will be used for colorize the markers.
for (i = 0; i < 5; i++) {
    $('head').append($("<style> .marker-color-" + (i + 1).toString() + " { color: " + colors[i] + "; font-size: 15px; text-shadow: 0 0 3px #ffffff;} </style>"));
}



// Create heat map of goals
$.getJSON(goals, function(data) {
   coords = data.features.map(feat => feat.geometry.coordinates.slice().reverse())
   var heat = L.heatLayer(coords,{ radius: 11}).addTo(mymap);
});

// // 7. Set style function that sets fill color.md property equal to airport count
// function style(feature) {
//     return {
//         fillColor: setColor(feature.properties.count),
//         fillOpacity: 0.7,
//         weight: 2,
//         opacity: 1,
//         color: '#b4b4b4',
//         dashArray: '4'
//     };
// }


// 9. Create Leaflet Control Object for Legend
var legend = L.control({position: 'topright'});

// 10. Function that runs when legend is added to map
legend.onAdd = function () {

    // Create Div Element and Populate it with HTML
    var div = L.DomUtil.create('div', 'legend');
    div.innerHTML += '<b>Number of Airports</b><br />';
    div.innerHTML += '<i style="background: ' + colors[4] + '; opacity: 0.7"></i><p>21+</p>';
    div.innerHTML += '<i style="background: ' + colors[3] + '; opacity: 0.7"></i><p>16-20</p>';
    div.innerHTML += '<i style="background: ' + colors[2] + '; opacity: 0.7"></i><p>11-15</p>';
    div.innerHTML += '<i style="background: ' + colors[1] + '; opacity: 0.7"></i><p> 6-10</p>';
    div.innerHTML += '<i style="background: ' + colors[0] + '; opacity: 0.7"></i><p> 0- 5</p>';
    div.innerHTML += '<hr><b>Has control tower<b><br />';
    div.innerHTML += '<i class="fa fa-plane marker-color-1"></i><p> YES</p>';
    div.innerHTML += '<i class="fa fa-plane marker-color-2"></i><p> NO</p>';
    // Return the Legend div containing the HTML content
    return div;
};

// 11. Add a legend to map
legend.addTo(mymap);
